name: OVM Integration Tests

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize

jobs:
  check_flags:
    name: Check flags
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.get_commit_message.outputs.headCommitMsg }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: get_commit_message
        run: echo "::set-output name=headCommitMsg::$(git show -s --format=%s)"

  ovm-integration1:
    name: OIT 1 - Synthetix
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') || contains(needs.check_flags.outputs.message, '[run-synthetix]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
        run: |
          pnpm hardhat node --fork $ALCHEMY_URL &

      - name: SynthetixPerpsV2Test
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/synthetixPerpsV2/*.ts

      - name: SynthetixV3Test
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/synthetixV3/*.ts

      - name: SynthetixTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/SynthetixTest.ts

      - name: SynthPriceAggregatorTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/SynthPriceAggregatorTest.ts

      - name: SynthRedemeerTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/SynthRedemeerTest.ts

  ovm-integration2:
    name: OIT 2 - Aave V3, Arrakis, Velodrome
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
        run: |
          pnpm hardhat node --fork $ALCHEMY_URL &

      - name: AaveV3Test
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/aaveV3/AaveV3Test.ts

      - name: AaveV3TestWithWETH
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/aaveV3/AaveV3TestWithWETH.ts

      - name: ArrakisTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/arrakis/*.ts

      - name: Velodrome V2
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/velodromeV2/*.ts

      - name: DhedgeVeloUniV2RouterTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/DhedgeVeloUniV2RouterTest.ts

  ovm-integration3:
    name: OIT 3 - EasySwapper
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') || contains(needs.check_flags.outputs.message, '[run-easy-swapper]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
        run: |
          pnpm hardhat node --fork $ALCHEMY_URL &

      - name: DhedgeEasySwapperTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/DhedgeEasySwapperTest.ts

  ovm-integration4:
    name: OIT 4 - PoolTokenSwapper, Uniswap V3, ZeroEx, OneInch
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
          ONE_INCH_API_KEY: ${{ secrets.ONE_INCH_API_KEY }}
        run: |
          pnpm hardhat node --fork $ALCHEMY_URL &

      - name: PoolTokenSwapperTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/poolTokenSwapper/*.ts

      - name: UniswapV3AssetGuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/uniswapV3/UniswapV3AssetGuardTest.ts

      - name: UniswapV3NonfungiblePositionGuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/uniswapV3/UniswapV3NonfungiblePositionGuardTest.ts

      - name: UniswapV3PriceLibraryTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/uniswapV3/UniswapV3PriceLibraryTest.ts

      - name: UniswapV3SwapRouterTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/uniswapV3/UniswapV3SwapRouterTest.ts

      - name: UniV3TWAPAggregatorTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/uniswapV3/UniV3TWAPAggregatorTest.ts

      - name: ZeroExSwapsTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/zeroEx/ZeroExSwapsTest.ts

      - name: OneInchV6GuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/ovm/oneInch/OneInchV6GuardTest.ts
