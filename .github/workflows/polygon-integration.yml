name: Polygon Integration Tests

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize

jobs:
  check_flags:
    name: Check flags
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.get_commit_message.outputs.headCommitMsg }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: get_commit_message
        run: echo "::set-output name=headCommitMsg::$(git show -s --format=%s)"

  polygon-integration1:
    name: PIT 1 - Balancer
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-polygon]') }}
    env:
      POLYGON_URL: ${{ secrets.POLYGON_ALCHEMY_URL_INTEGRATION_TEST }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run Polygon fork in background
        run: |
          pnpm hardhat node --fork $POLYGON_URL &

      - name: BalancerComposableStablePoolAggregatorTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/balancerV2/BalancerComposableStablePoolAggregatorTest.ts

      - name: BalancerRewardsTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/balancerV2/BalancerRewardsTest.ts

      - name: BalancerStablePoolAggregatorTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/balancerV2/BalancerStablePoolAggregatorTest.ts

      - name: BalancerTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/balancerV2/BalancerTest.ts

      - name: Balancer V2 Staking (Asset Guard)
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/balancerV2/BalancerV2GaugeAssetGuardTest.ts

      - name: Balancer V2 Staking (Contract Guard)
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/balancerV2/BalancerV2GaugeContractGuardTest.ts

  polygon-integration2:
    name: PIT 2
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-polygon]') }}
    env:
      POLYGON_URL: ${{ secrets.POLYGON_ALCHEMY_URL_INTEGRATION_TEST }}
      ONE_INCH_API_KEY: ${{ secrets.ONE_INCH_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run Polygon fork in background
        run: |
          pnpm hardhat node --fork $POLYGON_URL &

      - name: OneInchV6GuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/oneInch/OneInchV6GuardTest.ts

      - name: ArrakisTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/arrakis/*.ts

      - name: UniswapV3NonfungiblePositionGuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/uniswapV3/UniswapV3NonfungiblePositionGuardTest.ts

      - name: UniswapV3AssetGuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/uniswapV3/UniswapV3AssetGuardTest.ts

      - name: UniswapV3PriceLibraryTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/uniswapV3/UniswapV3PriceLibraryTest.ts

      - name: UniswapV3SwapRouterGuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/uniswapV3/UniswapV3SwapRouterGuardTest.ts

      - name: ZeroExSwapsTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/zeroEx/ZeroExSwapsTest.ts

  polygon-integration3:
    name: PIT 3 - Aave
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-polygon]') }}
    env:
      POLYGON_URL: ${{ secrets.POLYGON_ALCHEMY_URL_INTEGRATION_TEST }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run Polygon fork in background
        run: |
          pnpm hardhat node --fork $POLYGON_URL &

      - name: LendingEnabledAssetGuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/aave/LendingEnabledAssetGuardTest.ts

      - name: AaveV2Test
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/aave/AaveV2Test.ts

      - name: AaveV2TestWithWETH
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/aave/AaveV2TestWithWETH.ts

      - name: AaveV3Test
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/aave/AaveV3Test.ts

      - name: AaveV3TestWithWETH
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/aave/AaveV3TestWithWETH.ts

      - name: AaveV2V3Test
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/aave/AaveV2V3Test.ts

  polygon-integration4:
    name: PIT 4 - EasySwapper
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-polygon]') || contains(needs.check_flags.outputs.message, '[run-easy-swapper]')}}
    env:
      POLYGON_URL: ${{ secrets.POLYGON_ALCHEMY_URL_INTEGRATION_TEST }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run Polygon fork in background
        run: |
          pnpm hardhat node --fork $POLYGON_URL &

      - name: DhedgeEasySwapperTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/DhedgeEasySwapperTest.ts

      - name: EasySwapperGuardTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/EasySwapperGuardTest.ts

  polygon-integration5:
    name: PIT 5 - Core contracts related
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-polygon]') }}
    env:
      POLYGON_URL: ${{ secrets.POLYGON_ALCHEMY_URL_INTEGRATION_TEST }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ^8.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./
      - name: Run Polygon fork in background
        run: |
          pnpm hardhat node --fork $POLYGON_URL &

      - name: DhedgePoolAggregatorTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/DhedgePoolAggregatorTest.ts

      - name: DhedgeSuperSwapperTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/DhedgeSuperSwapperTest.ts

      - name: DhedgeUniV3V2RouterTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/DhedgeUniV3V2RouterTest.ts

      - name: ExecTransactionsTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/ExecTransactionsTest.ts

      - name: ETHCrossAggregatorTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/priceAggregators/ETHCrossAggregatorTest.ts

      - name: MaticXPriceAggregatorTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/priceAggregators/MaticXPriceAggregatorTest.ts

      - name: ManagerFeeTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/ManagerFeeTest.ts

      - name: WithdrawToTest
        if: always()
        run: |
          pnpm test:integr ./test/integration/polygon/WithdrawToTest.ts
